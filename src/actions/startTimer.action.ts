import { Action } from './action.class';
import { Markup, Telegraf } from 'telegraf';
import { IBotContext, SessionData } from '../context/context.interface';
import { MAX_COMPLETED_TIMERS } from '../constants';
import { Timer } from '../common/timer';

export class StartTimerAction extends Action {
  private timer: Timer;

  constructor(protected bot: Telegraf<IBotContext>) {
    super(bot);
    this.timer = Timer.getInstance();
  }

  handle() {
    this.bot.action('start_timer', (ctx) => {
      this.timer.clear(ctx.session);

      ctx.editMessageText(
        `
        ü§ñ 
        \n –ü–æ–º–∏–¥–æ—Ä–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å! 
        \n –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ –≤—Å–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏.
        \n –ß–µ—Ä–µ–∑ 25 –º–∏–Ω—É—Ç —è –Ω–∞–ø–æ–º–Ω—é –≤–∞–º —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤.
        ${this.getCounterRow(ctx.session)}
        `,
        Markup.inlineKeyboard([
          Markup.button.callback('–ü—Ä–µ—Ä–≤–∞—Ç—å –ø–æ–º–∏–¥–æ—Ä–∫—É ‚èπ', 'stop_timer'),
        ])
      );

      this.timer.start(ctx.session, ({ isMaxCompletedTimers }) => {
        ctx.deleteMessage();

        if (isMaxCompletedTimers) {
          ctx.reply(
            `
          ü§ñ 
          \n –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –ø–æ–º–∏–¥–æ—Ä–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å! üî•
          \n –°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤ 15 - 30 –º–∏–Ω—É—Ç. 
          \n –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –ø–æ–º–∏–¥–æ—Ä–∫—É" –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.
          ${this.getCounterRow(ctx.session)}
          `,
            Markup.inlineKeyboard([
              Markup.button.callback(
                '–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –ø–æ–º–∏–¥–æ—Ä–∫—É ‚ñ∂',
                'start_timer'
              ),
            ])
          );
        } else {
          ctx.reply(
            `
          ü§ñ 
          \n –ü–æ–º–∏–¥–æ—Ä–∫–∞ –ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!
          \n –°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤ 5-10 –º–∏–Ω—É—Ç. 
          \n –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –ø–æ–º–∏–¥–æ—Ä–∫—É" –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.
          ${this.getCounterRow(ctx.session)}
          `,
            Markup.inlineKeyboard([
              Markup.button.callback(
                '–ù–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –ø–æ–º–∏–¥–æ—Ä–∫—É ‚è≠',
                'start_timer'
              ),
            ])
          );
        }
      });
    });
  }

  private getCounterRow = (session: SessionData) =>
    `\n ${session.completedTimersCounter} / ${MAX_COMPLETED_TIMERS} üçÖ`;
}
